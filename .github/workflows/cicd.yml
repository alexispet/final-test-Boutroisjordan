name: CICD

on:
  push:
    branches:
      - main
      - develop  # Ajoutez la branche sur laquelle vous souhaitez dÃ©clencher le workflow

env:
  REGISTRY: ghrc.io
  IMAGE_NAME: boutroisjordan/final-test-boutroisjordan-node
  # DB_HOST: ${{ secrets.DB_HOST }}
  # DB_USER: ${{ secrets.DB_USER }}
  # DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  # DB_DATABASE: ${{ secrets.DB_DATABASE }}

jobs:

  # debugSecrets:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Debug secrets
  #       run: |
  #         echo "DB_HOST: ${{ secrets.DB_HOST }}"
  #         echo "DB_USER: ${{ secrets.DB_USER }}"
  #         echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"
  #         echo "DB_DATABASE: ${{ secrets.DB_DATABASE }}"

  buildDocker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GTHB_TOKEN }}

      - name: Set Docker image tag based on branch
        id: set-tag
        run: echo "TAG=$(if [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then echo 'develop'; else echo 'latest'; fi)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build --tag ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} --platform linux/amd64 .

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  # testDocker:
  #   needs: buildDocker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     # - name: Display .env content
  #     #   run: cat .env

  #     # - name: Create .env file
  #     #   run: echo "DB_HOST=${{ env.DB_HOST }}\nDB_USER=${{ env.DB_USER }}\nDB_PASSWORD=${{ env.DB_PASSWORD }}\nDB_DATABASE=${{ env.DB_DATABASE }}" > .env

  #     - name: Docker run
  #       run: docker compose up -d
  #       # run: docker compose --env-file .env up -d

  #     - name: Sleep
  #       run: sleep 30

  #     - name: Test
  #       run: docker compose exec node npm run test
  tests:
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: adambirds/docker-compose-action@v1.3.0
        with:
            compose-file: "./docker-compose.yml"
            down-flags: "--volumes"
            services: |
                node
                mariadb
            test-container: node
            test-command: "npm run test"
        env: 
            MYSQL_RANDOM_ROOT_PASSWORD: "yes"
            DB_DATABASE: ${{ secrets.DB_DATABASE }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_USER: ${{ secrets.DB_USER }}