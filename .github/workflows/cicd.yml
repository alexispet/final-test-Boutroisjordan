name: CICD

on:
  push:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: boutroisjordan/final-test-boutroisjordan-node

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Tests with Docker Compose
        uses: adambirds/docker-compose-action@v1.3.0
        with:
          compose-file: "./docker-compose.yml"
          down-flags: "--volumes"
          services: |
            node
            mariadb
          test-container: node
          test-command: "npm run test"
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: echo "DB_HOST=${{ secrets.DB_HOST }}\nDB_USER=${{ secrets.DB_USER }}\nDB_PASSWORD=${{ secrets.DB_PASSWORD }}\nDB_DATABASE=${{ secrets.DB_DATABASE }}" > .env

      - name: Launch Docker
        run: docker compose --env-file .env up -d

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost.com:3000
            http://localhost.com:3000/post
          budgetPath: ./budget.json
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Shut down Docker
        run: docker compose down

  buildDocker:
  needs: [tests, codeql-analysis, lighthouse]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GTHB_TOKEN }}

      - name: Set Docker image tag based on branch
        id: set-tag
        run: echo "TAG=$(if [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then echo 'develop'; else echo 'latest'; fi)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build --tag ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} --platform linux/amd64 .

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}
