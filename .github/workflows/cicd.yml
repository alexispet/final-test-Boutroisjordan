name: CICD

on:
  push:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: boutroisjordan/final-test-boutroisjordan-node

jobs:

  # tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Run Tests with Docker Compose
  #       uses: adambirds/docker-compose-action@v1.3.0
  #       with:
  #         compose-file: "./docker-compose.yml"
  #         down-flags: "--volumes"
  #         services: |
  #           node
  #           mariadb
  #         test-container: node
  #         test-command: "npm run test"
  #       env:
  #         MARIADB_RANDOM_ROOT_PASSWORD: "yes"
  #         DB_DATABASE: ${{ secrets.DB_DATABASE }}
  #         DB_HOST: ${{ secrets.DB_HOST }}
  #         DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #         DB_USER: ${{ secrets.DB_USER }}

  test:
    #    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Compose
        run: |
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
      - run: docker compose up -d --build
      - run: sleep 10 # wait for the database to be ready mariadb
      - run: docker compose logs express
      - run: docker compose exec express npm run test

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # dependency-audit:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v4
  #      - run: npm audit --audit-level=high


  buildDocker:
    needs: [test, codeql-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GTHB_TOKEN }}

      - name: Set Docker image tag based on branch
        id: set-tag
        run: echo "TAG=$(if [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then echo 'develop'; else echo 'latest'; fi)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build --tag ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} --platform linux/amd64 .

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}
